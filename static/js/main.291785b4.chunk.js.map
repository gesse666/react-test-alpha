{"version":3,"sources":["redux/actions.js","App.js","redux/reducers/reducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["FETCH_USERS","ADD_LIKE","DELETE_USER","connect","state","users","reducer","dispatch","dispatchUsers","data","type","payload","fetchUsers","dispatchLike","id","like","AddLike","dispatchDelete","DeleteUser","useState","filtered","setFiltered","isToggled","setToggled","useEffect","fetch","then","res","json","console","log","catch","err","error","className","onClick","newUsers","filter","item","likeFilter","map","i","src","avatar","alt","first_name","last_name","initialState","showLikes","SetLikes","usersArr","user","updatePhotos","newPhotos","deleteUser","newState","action","UsersWithLikes","myApp","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.291785b4.chunk.js","sourcesContent":["export const FETCH_USERS = \"FETCH_USERS\";\nexport const ADD_LIKE = \"ADD_LIKE\";\nexport const DELETE_USER = \"DELETE_USER\";\n\nexport const fetchUsers = (data) => {\n    return {\n        type: \"FETCH_USERS\",\n        payload: data\n    }\n};\n\nexport const AddLike = (id, like) => {\n    return {\n        type: \"ADD_LIKE\",\n        id: id,\n        like: like,\n    }\n};\n\nexport const DeleteUser = (id) => {\n    return {\n        type: \"DELETE_USER\",\n        id: id\n    }\n}","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchUsers, AddLike, DeleteUser } from \"./redux/actions\";\n\nfunction App({ dispatchUsers, users, dispatchLike, dispatchDelete }) {\n  const [filtered, setFiltered] = useState(users);\n  const [isToggled, setToggled] = useState(false);\n\n  function likeFilter() {\n    setToggled(!isToggled);\n    if (!isToggled) {\n      let newUsers = [...users].filter((item) => item.like === true);\n      setFiltered(newUsers);\n    } else {\n      setFiltered(users);\n    }\n  }\n\n  useEffect(() => {\n    fetch(\"https://reqres.in/api/users/\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        console.log(data.data);\n        dispatchUsers(data.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [dispatchUsers]);\n\n  useEffect(() => {\n    setFiltered(users);\n  }, [users]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <button className=\"header__btn\" onClick={() => likeFilter()}>\n          Показать только лайки\n        </button>\n      </header>\n      <section className=\"cards\">\n        <ul className=\"cards__list\">\n          {filtered.map((i) => (\n            <li className=\"cards__item\" key={i.id}>\n              <img src={i.avatar} alt=\"avatar\"></img>\n              <div className=\"cards__info\">\n                <div\n                  className=\"cards__like\"\n                  onClick={() => dispatchLike(i.id, i.like)}\n                >\n                  {i.like ? <p>&#9829;</p> : <p>&#9825;</p>}\n                </div>\n                <div>\n                  <p>{i.first_name}</p>\n                  <p>{i.last_name}</p>\n                </div>\n                <p className=\"cards__del\" onClick={() => dispatchDelete(i.id)}>\n                  &#10006;\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.reducer.users\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatchUsers: (data) => dispatch(fetchUsers(data)),\n    dispatchLike: (id, like) => dispatch(AddLike(id, like)),\n    dispatchDelete: (id) => dispatch(DeleteUser(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { ADD_LIKE, DELETE_USER, FETCH_USERS } from \"../actions\";\n\nconst initialState = {\n  users: [],\n  showLikes: false\n};\n\nfunction SetLikes(usersArr) {\n  usersArr.map((user) => {\n    return (user.like = false);\n  });\n  return usersArr;\n}\n\nfunction updatePhotos(state, id, like) {\n  const newPhotos = state.users.map((user) => {\n    if (user.id === id && like === false) {\n      return { ...user, like: true };\n    }\n    if (user.id === id && like === true) {\n      return { ...user, like: false };\n    }\n    return user;\n  });\n  return { ...state, users: newPhotos };\n}\n\nfunction deleteUser(state, id) {\n  let newState = state.users.filter((user) => user.id !== id);\n  return { ...state, users: newState };\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_USERS: {\n      const UsersWithLikes = SetLikes(action.payload);\n      return {\n        ...state,\n        users: UsersWithLikes\n      };\n    }\n    case ADD_LIKE:\n      return updatePhotos(state, action.id, action.like);\n    case DELETE_USER:\n      return deleteUser(state, action.id);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport reducer from './reducer'\n\nconst myApp = combineReducers({\n  reducer\n})\n\nexport default myApp;","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport myApp from './reducers'\n\nconst store = createStore(myApp, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}